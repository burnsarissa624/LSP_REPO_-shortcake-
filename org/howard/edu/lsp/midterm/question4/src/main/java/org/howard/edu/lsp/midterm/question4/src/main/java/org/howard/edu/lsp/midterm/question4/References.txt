Session 1:
User:
Why is it important to make Device abstract instead of creating it as a normal class?
Output:
Making Device abstract helps define the shared structure for all devices while preventing it from being used on its own. Since a generic device isn’t meant to exist in the real system, an abstract class allows subclasses like DoorLock, Camera, and Thermostat to reuse its fields and methods while still defining their own details. It keeps the code cleaner and ensures that only real, functional device types can be created in the program.
---


User:
How should I structure and test my Main class for Question 4 to make sure all the methods in my package work properly?
ChatGPT:
You should keep your Main class inside the same package as your other classes for Question 4. The purpose of the Main class is to act as a simple test driver — meaning it’s where you create objects from your other classes and call their methods to confirm everything behaves as expected.
Include clear print statements so you can see the results of each method when you run the program. This helps verify that your logic, relationships between classes, and any inheritance or composition features are all working correctly.

---

Session 2:
User:
My compiler says “cannot find symbol setConnected(boolean).” What should I do?

ChatGPT:
Ensure the method in Device.java is declared as:
protected void setConnected(boolean connected) {
    this.connected = connected;
}
Then subclasses can safely call it from connect() and disconnect().

---

Session 3:
User:
What should DoorLock, Thermostat, and Camera each extend or implement?

ChatGPT:
• DoorLock – extends Device, implements Networked and BatteryPowered  
• Thermostat – extends Device, implements Networked  
• Camera – extends Device, implements Networked and BatteryPowered

All constructors must call super(id, location) and validate inputs.

---

Session 4:
User:
How do I validate the battery percentage?

ChatGPT:
Use a setter that checks bounds:
```java
if (percent < 0 || percent > 100)
    throw new IllegalArgumentException("battery 0..100");
